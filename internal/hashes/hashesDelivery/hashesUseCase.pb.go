// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: internal/hashes/hashesDelivery/hashesUseCase.proto

package hashesDelivery

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *HashRequest) Reset() {
	*x = HashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashRequest) ProtoMessage() {}

func (x *HashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashRequest.ProtoReflect.Descriptor instead.
func (*HashRequest) Descriptor() ([]byte, []int) {
	return file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescGZIP(), []int{0}
}

func (x *HashRequest) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type HashReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *HashReply) Reset() {
	*x = HashReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashReply) ProtoMessage() {}

func (x *HashReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashReply.ProtoReflect.Descriptor instead.
func (*HashReply) Descriptor() ([]byte, []int) {
	return file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescGZIP(), []int{1}
}

func (x *HashReply) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *HashReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_internal_hashes_hashesDelivery_hashesUseCase_proto protoreflect.FileDescriptor

var file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDesc = []byte{
	0x0a, 0x32, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x22, 0x1f, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0x35, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x4d, 0x0a, 0x06,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescOnce sync.Once
	file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescData = file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDesc
)

func file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescGZIP() []byte {
	file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescOnce.Do(func() {
		file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescData)
	})
	return file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDescData
}

var file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_hashes_hashesDelivery_hashesUseCase_proto_goTypes = []interface{}{
	(*HashRequest)(nil), // 0: hashesDelivery.HashRequest
	(*HashReply)(nil),   // 1: hashesDelivery.HashReply
}
var file_internal_hashes_hashesDelivery_hashesUseCase_proto_depIdxs = []int32{
	0, // 0: hashesDelivery.Hasher.GetHash:input_type -> hashesDelivery.HashRequest
	1, // 1: hashesDelivery.Hasher.GetHash:output_type -> hashesDelivery.HashReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_hashes_hashesDelivery_hashesUseCase_proto_init() }
func file_internal_hashes_hashesDelivery_hashesUseCase_proto_init() {
	if File_internal_hashes_hashesDelivery_hashesUseCase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_hashes_hashesDelivery_hashesUseCase_proto_goTypes,
		DependencyIndexes: file_internal_hashes_hashesDelivery_hashesUseCase_proto_depIdxs,
		MessageInfos:      file_internal_hashes_hashesDelivery_hashesUseCase_proto_msgTypes,
	}.Build()
	File_internal_hashes_hashesDelivery_hashesUseCase_proto = out.File
	file_internal_hashes_hashesDelivery_hashesUseCase_proto_rawDesc = nil
	file_internal_hashes_hashesDelivery_hashesUseCase_proto_goTypes = nil
	file_internal_hashes_hashesDelivery_hashesUseCase_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HasherClient is the client API for Hasher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HasherClient interface {
	GetHash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashReply, error)
}

type hasherClient struct {
	cc grpc.ClientConnInterface
}

func NewHasherClient(cc grpc.ClientConnInterface) HasherClient {
	return &hasherClient{cc}
}

func (c *hasherClient) GetHash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashReply, error) {
	out := new(HashReply)
	err := c.cc.Invoke(ctx, "/hashesDelivery.Hasher/GetHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HasherServer is the server API for Hasher service.
type HasherServer interface {
	GetHash(context.Context, *HashRequest) (*HashReply, error)
}

// UnimplementedHasherServer can be embedded to have forward compatible implementations.
type UnimplementedHasherServer struct {
}

func (*UnimplementedHasherServer) GetHash(context.Context, *HashRequest) (*HashReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHash not implemented")
}

func RegisterHasherServer(s *grpc.Server, srv HasherServer) {
	s.RegisterService(&_Hasher_serviceDesc, srv)
}

func _Hasher_GetHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HasherServer).GetHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashesDelivery.Hasher/GetHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HasherServer).GetHash(ctx, req.(*HashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hasher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hashesDelivery.Hasher",
	HandlerType: (*HasherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHash",
			Handler:    _Hasher_GetHash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/hashes/hashesDelivery/hashesUseCase.proto",
}
